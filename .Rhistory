.libPaths('G:/Applications/R_Packages/R3.5.2 library/library_Nov')
.libPaths()
coxReg <- function(predictor, dataframe) {
coxph(as.formula(paste("Surv(time, dmNewDig) ~ ", predictor, "+ age0 + sex0")), data = dataframe)
}
pipeline <- function(imput, coxReg, a, ) {
outAtoB <- enframe(imput, name = NULL) %>%
mutate(model = (map(imput, coxReg, a)) %>%
map(tidy)) %>%
unnest(model) %>%
mutate(FDR = p.adjust(p.value, method = "BY")) %>%
filter(term != "(Intercept)" & term != "age0" & term != "sex0Male") %>%
filter(FDR < 0.05) %>%
select(value) %>%
mutate(model = (map(unlist(., use.names = F), coxReg, b)) %>%
map(tidy)) %>%
unnest(model) %>%
filter(term != "(Intercept)" & term != "age0" & term != "sex0Male") %>%
mutate(ciLow = round((estimate - 1.96*std.error), 2),
ciHigh = round((estimate + 1.96*std.error), 2),
ci = paste(ciLow, "; ", ciHigh, sep = "")) %>%
select(value, term, estimate, ci, p.value) %>%
filter(p.value < 0.05) %>%
rename(estimateAtoB = estimate, ciAtoB = ci, p.valueAtoB = p.value)
}
require(tidyverse)
coxReg <- function(predictor, dataframe) {
coxph(as.formula(paste("Surv(time, dmNewDig) ~ ", predictor, "+ age0 + sex0")), data = dataframe)
}
pipeline <- function(imput, coxReg, a, ) {
outAtoB <- enframe(imput, name = NULL) %>%
mutate(model = (map(imput, coxReg, a)) %>%
map(tidy)) %>%
unnest(model) %>%
mutate(FDR = p.adjust(p.value, method = "BY")) %>%
filter(term != "(Intercept)" & term != "age0" & term != "sex0Male") %>%
filter(FDR < 0.05) %>%
select(value) %>%
mutate(model = (map(unlist(., use.names = F), coxReg, b)) %>%
map(tidy)) %>%
unnest(model) %>%
filter(term != "(Intercept)" & term != "age0" & term != "sex0Male") %>%
mutate(ciLow = round((estimate - 1.96*std.error), 2),
ciHigh = round((estimate + 1.96*std.error), 2),
ci = paste(ciLow, "; ", ciHigh, sep = "")) %>%
select(value, term, estimate, ci, p.value) %>%
filter(p.value < 0.05) %>%
rename(estimateAtoB = estimate, ciAtoB = ci, p.valueAtoB = p.value)
}
pipeline <- function(imput, coxReg, a) {
outAtoB <- enframe(imput, name = NULL) %>%
mutate(model = (map(imput, coxReg, a)) %>%
map(tidy)) %>%
unnest(model) %>%
mutate(FDR = p.adjust(p.value, method = "BY")) %>%
filter(term != "(Intercept)" & term != "age0" & term != "sex0Male") %>%
filter(FDR < 0.05) %>%
select(value) %>%
mutate(model = (map(unlist(., use.names = F), coxReg, b)) %>%
map(tidy)) %>%
unnest(model) %>%
filter(term != "(Intercept)" & term != "age0" & term != "sex0Male") %>%
mutate(ciLow = round((estimate - 1.96*std.error), 2),
ciHigh = round((estimate + 1.96*std.error), 2),
ci = paste(ciLow, "; ", ciHigh, sep = "")) %>%
select(value, term, estimate, ci, p.value) %>%
filter(p.value < 0.05) %>%
rename(estimateAtoB = estimate, ciAtoB = ci, p.valueAtoB = p.value)
}
pipeline <- function(imput, coxReg, a, b) {
outAtoB <- enframe(imput, name = NULL) %>%
mutate(model = (map(imput, coxReg, a)) %>%
map(tidy)) %>%
unnest(model) %>%
mutate(FDR = p.adjust(p.value, method = "BY")) %>%
filter(term != "(Intercept)" & term != "age0" & term != "sex0Male") %>%
filter(FDR < 0.05) %>%
select(value) %>%
mutate(model = (map(unlist(., use.names = F), coxReg, b)) %>%
map(tidy)) %>%
unnest(model) %>%
filter(term != "(Intercept)" & term != "age0" & term != "sex0Male") %>%
mutate(ciLow = round((estimate - 1.96*std.error), 2),
ciHigh = round((estimate + 1.96*std.error), 2),
ci = paste(ciLow, "; ", ciHigh, sep = "")) %>%
select(value, term, estimate, ci, p.value) %>%
filter(p.value < 0.05) %>%
rename(estimateAtoB = estimate, ciAtoB = ci, p.valueAtoB = p.value)
outBtoA <- enframe(imput, name = NULL) %>%
mutate(model = (map(imput, coxReg, b)) %>%
map(tidy)) %>%
unnest(model) %>%
mutate(FDR = p.adjust(p.value, method = "BY")) %>%
filter(term != "(Intercept)" & term != "age0" & term != "sex0Male") %>%
filter(FDR < 0.05) %>%
select(value) %>%
mutate(model = (map(unlist(., use.names = F), coxReg, a)) %>%
map(tidy)) %>%
unnest(model) %>%
filter(term != "(Intercept)" & term != "age0" & term != "sex0Male") %>%
mutate(ciLow = round((estimate - 1.96*std.error), 2),
ciHigh = round((estimate + 1.96*std.error), 2),
ci = paste(ciLow, "; ", ciHigh, sep = "")) %>%
select(value, term, estimate, ci, p.value) %>%
filter(p.value < 0.05) %>%
rename(estimateBtoA = estimate, ciBtoA = ci, p.valueBtoA = p.value) %>%
merge(outAtoB, by = c("term", "value"))
}
pipeline <- function(imput, coxReg, a, b) {
outAtoB <- enframe(imput, name = NULL) %>%
mutate(model = (map(imput, coxReg, a)) %>%
map(tidy)) %>%
unnest(model) %>%
mutate(FDR = p.adjust(p.value, method = "BY")) %>%
filter(term != "(Intercept)" & term != "age0" & term != "sex0Male") %>%
filter(FDR < 0.05) %>%
select(value) %>%
mutate(model = (map(unlist(., use.names = F), coxReg, b)) %>%
map(tidy)) %>%
unnest(model) %>%
filter(term != "(Intercept)" & term != "age0" & term != "sex0Male") %>%
mutate(ciLow = round((estimate - 1.96*std.error), 2),
ciHigh = round((estimate + 1.96*std.error), 2),
ci = paste(ciLow, "; ", ciHigh, sep = "")) %>%
select(value, term, estimate, ci, p.value) %>%
filter(p.value < 0.05) %>%
rename(estimateAtoB = estimate, ciAtoB = ci, p.valueAtoB = p.value)
outBtoA <- enframe(imput, name = NULL) %>%
mutate(model = (map(imput, coxReg, b)) %>%
map(tidy)) %>%
unnest(model) %>%
mutate(FDR = p.adjust(p.value, method = "BY")) %>%
filter(term != "(Intercept)" & term != "age0" & term != "sex0Male") %>%
filter(FDR < 0.05) %>%
select(value) %>%
mutate(model = (map(unlist(., use.names = F), coxReg, a)) %>%
map(tidy)) %>%
unnest(model) %>%
filter(term != "(Intercept)" & term != "age0" & term != "sex0Male") %>%
mutate(ciLow = round((estimate - 1.96*std.error), 2),
ciHigh = round((estimate + 1.96*std.error), 2),
ci = paste(ciLow, "; ", ciHigh, sep = "")) %>%
select(value, term, estimate, ci, p.value) %>%
filter(p.value < 0.05) %>%
rename(estimateBtoA = estimate, ciBtoA = ci, p.valueBtoA = p.value) %>%
merge(outAtoB, by = c("term", "value"))
n <- dataTot %>% select(unlist(outBtoA$value, use.names = F))
bothModels <- outBtoA %>%
mutate(noofna = colSums(is.na(n))) %>%
mutate(casesComplete = nrow(n) - noofna) %>%
select(-c(noofna, term)) %>%
arrange(p.valueAtoB, p.valueBtoA)
oneModel <- anti_join(outAtoB, outBtoA)
}
grouping <- function(zip, allV) {
randomTable <- data.frame(zip = unique(allV$zip), group = sample(0:1, length(unique(allV$zip)), replace = TRUE))
set.seed(4321)
splitct <- 0
index <- 0
while(!(splitct > ((nrow(allV)/2)-1) & splitct < ((nrow(allV)/2)+1))){
in1 <- unique(allV$zip) %>% table %>% names
tmp1 <- sample(in1, length(in1)/2, replace = FALSE)
index <- which(allV$zip %in% tmp1)
splitct <- length(index)
print(splitct)
}
a <- allV[index,1]
b <- allV[-index,1]
allVI <- allV %>%
mutate(group = case_when(
PSEUDOIDEXT %in% a ~ "0" ,
PSEUDOIDEXT %in% b  ~ "1" ))
}
getwd()
document()
require(devtools)
require("devtools")
require(roxygen)
require("roxygen" )
source('Y:/PhenoData/-vdM/R/6EWAS/lifepipe/R/grouping_function.R')
source('Y:/PhenoData/-vdM/R/6EWAS/lifepipe/R/grouping_function.R')
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_Nov")
.libPaths()
require(devtools)
require(roxygen2)
document()
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_Nov")
.libPaths()
.libPaths("Y:/PhenoData/-vdM/R/6EWAS/lifepipe")
.libPaths()
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_Nov")
require(tidyverse)
require(mlr)
require(broom)
require(gplots)
require(psych)
.libPaths("Y:/PhenoData/-vdM/R/6EWAS/lifepipe")
current <- "Y:/PhenoData/-vdM/R/6EWAS/lifepipe"
old <- "G:/Applications/R_Packages/R3.5.2 library/library_Nov"
list <- list.files(old, "tidyverse", "mlr", "broom", "gplots", "psych")
list <- list.files(old, c("tidyverse", "mlr", "broom", "gplots", "psych"))
file.copy(list, current)
list <- list.files(old, "tidyverse")
file.copy(list, current)
file.copy("G:/Applications/R_Packages/R3.5.2 library/library_Nov/tidyverse", current)
file.copy(G:/Applications/R_Packages/R3.5.2 library/library_Nov/tidyverse, current)
old2 <- "G:/Applications/R_Packages/R3.5.2 library/library_Nov/tidyverse"
file.copy(old2, current)
.libPaths("G:/Application/R_Packages/R3.5.2 library/library_Dec")
.libPaths()
.libPaths("G:/Application/R_Packages/R3.5.2 library/library_Nov")
.libPaths()
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_Dec")
.libPaths()
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_Dec")
.libPaths()
require(magitrr)
require(magitr)
.libPaths("Y:/Rlibrary")
.libPaths()
library(lifepipe)
library(lifepipe)
libPaths()
.libPaths()
.libPaths()
.libPaths(Y:/Rlibrary)
.libPaths("Y:/Rlibrary")
.libPaths()
library(LIFEWAS)
.libPaths()
library(LIFEWAS)
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_Dec")
.libPaths()
require(tidyverse)
require(mlr)
require(survival)
require(broom)
require(gplots)
require(psych)
.libPaths("Y:/Rlibrary")
library(LIFEWAS)
library(LIFEWAS)
library(LIFEWAS)
library(LIFEWAS)
library(LIFEWAS)
warnings()
library(LIFEWAS)
library(LIFEWAS)
library(LIFEWAS)
document()
.libPaths()
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_Dec")
roxygen2::document()
devtools::document()
.libPaths("Y:/Rlibrary")
library(LIFEWAS)
.libPaths()
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_Dec")
devtools::document()
.libPaths("Y:/Rlibrary")
library(LIFEWAS)
devtools::document()
library(LIFEWAS)
.libPaths(Y:/Rlibrary)
.libPaths("Y:/Rlibrary" )
library(LIFEWAS)
library(LIFEWAS)
.libPaths("Y:/Rlibrary" )
library(LIFEWAS)
library(LIFEWAS)
library(LIFEWAS)
library(LIFEWAS)
library(LIFEWAS)
library(LIFEWAS)
library(LIFEWAS)
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_Dec")
.libPaths()
.libPaths("Y:/Rlibrary" )
library(LIFEWAS)
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_Dec")
devtools::
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_Dec")
require(devtools)
.libPaths("Y:/Rlibrary")
devtools::document()
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_Dec")
require(roxygen2)
.libPaths("Y:/Rlibrary")
devtools::document()
library(LIFEWAS)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_Dec")
require(devtools)
.libPaths(Y:/Rlibrary)
.libPaths("Y:/Rlibrary")
devtools::document()
devtools::document()
devtools::document()
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_Dec")
.libPaths()
require(devtools)
devtools::document()
.libPaths("Y:/Rlibrary")
library(LIFEWAS)
devtools::document()
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_Dec")
devtools::document()
.libPaths("Y:/Rlibrary")
library(LIFEWAS)
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_Dec")
devtools::document()
.libPaths("Y:/Rlibrary")
library(LIFEWAS)
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_Dec")
devtools::document()
.libPaths("Y:/Rlibrary")
library(LIFEWAS)
.libPaths("Y:/Rlibrary")
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_Dec")
devtools::document()
.libPaths("Y:/Rlibrary")
library(LIFEWAS)
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_Dec")
devtools::document()
.libPaths("Y:/Rlibrary")
library(LIFEWAS)
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_Dec")
devtools::document()
.libPaths("Y:/Rlibrary")
library(LIFEWAS)
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_Dec")
devtools::document()
.libPaths("Y:/Rlibrary")
library(LIFEWAS)
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_Dec")
devtools::document()
.libPaths("Y:/Rlibrary")
library(LIFEWAS)
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_Dec")
devtools::document()
.libPaths("Y:/Rlibrary")
library(LIFEWAS)
.libPaths("G:/Applications/R_packages/R3.5.2 library/library_Dec")
.libPaths()
devtools::document()
.libPaths("Y:/Rlibrary")
library(LIFEWAS)
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_Dec")
devtools::document()
.libPaths(Y:/Rlibrary)
.libPaths("Y:/Rlibrary")
library(LIFEWAS)
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_Jan")
devtools::document()
devtools::document()
.libPaths("Y:/Rlibrary")
.libPaths()
library(LIFEWAS)
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_Jan")
devtools::document()
.libPaths("Y:/Rlibrary")
library(LIFEWAS)
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_Jan")
devtools::document()
.libPaths("Y:/Rlibrary")
library(LIFEWAS)
library(LIFEWAS)
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_Jan")
devtools::document()
.libPaths("Y:/Rlibrary")
library(LIFEWAS)
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_Jan")
devtools::document()
.libPaths("Y:/Rlibrary")
library(LIFEWAS)
.libPaths("Y:/Rlibrary")
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_Jan")
devtools::document()
.libPaths("Y:/Rlibrary")
library(LIFEWAS)
.libPaths("Y:/Rlibrary")
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_Jan")
devtools::document()
.libPaths("Y:/Rlibrary")
library(LIFEWAS)
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_Jan")
devtools::document()
.libPaths("Y:/Rlibrary")
library(LIFEWAS)
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_Feb")
.libPaths()
devtools::document()
.libPaths("Y:/Rlibrary")
.libPaths()
library(LIFEWAS)
devtools::document()
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_Feb")
devtools::document()
.libPaths("Y:/Rlibrary")
.libPaths()
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_Feb")
devtools::document()
.libPaths("Y:/Rlibrary")
.libPaths()
library(LIFEWAS)
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_Feb")
devtools::document()
.libPaths("Y:/Rlibrary")
.libPaths()
library(LIFEWAS)
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_Apr")
.libPaths("Y:/Rlibrary")
library(LIFEWAS)
devtools::document()
devtools::document()
library(LIFEWAS)
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_Apr")
devtools::document()
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_Apr")
.libPaths()
devtools::document()
require(ps)
require(ps)
devtools::document()
.libPaths()
devtools::document()
require(devtools)
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_Mar")
require(devtools)
require(ps)
require(devtools)
require(ps)
devtools::document()
library(ps)
.libPaths()
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_Feb")
library(ps)
devtools::document()
.libPaths("Y:/Rlibrary")
library(LIFEWAS)
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_May")
devtools::document()
.libPaths()
require(ps)
.libPaths()
devtools::document()
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_Apr")
.libPaths()
devtools::document()
.libPaths("Y:/Rlibrary")
require(ps)
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_May")
devtools::document()
.libPaths("Y:/Rlibrary")
devtools::document()
library(LIFEWAS)
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_May")
devtools::document()
.libPaths("Y:/Rlibrary")
devtools::document()
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_Apr")
devtools::document()
.libPaths()
require(mlr)
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_May")
require(mlr)
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_May")
devtools::document()
.libPaths("Y:/Rlibrary")
require(ps)
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_May")
devtools::document()
.libPaths("G:/Applications/R_Packages/R3.5.2 library/library_May")
.libPaths("Y:/Rlibrary")
library(LIFEWAS)
library(LIFEWAS)
